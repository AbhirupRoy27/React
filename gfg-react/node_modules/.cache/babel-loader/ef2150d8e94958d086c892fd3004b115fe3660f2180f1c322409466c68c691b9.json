{"ast":null,"code":"var _jsxFileName = \"/Users/abhiruproy/docuflow-pro/src/Ex01/ExerciseBrandFilter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst brands = [{\n  id: 1,\n  brand: 'puma'\n}, {\n  id: 2,\n  brand: 'addidas'\n}, {\n  id: 3,\n  brand: 'reebok'\n}, {\n  id: 4,\n  brand: 'nike'\n}, {\n  id: 5,\n  brand: 'puma'\n}];\nfunction ExerciseBrandFilter() {\n  _s();\n  const [selectedBrand, setSelectedBrand] = useState('');\n\n  // Get list of brands to display, filtered if a brand is selected\n  const filteredBrands = selectedBrand ? brands.filter(b => b.brand === selectedBrand) : brands;\n\n  // Extract unique brand names for the dropdown\n  const uniqueBrandNames = [...new Set(brands.map(b => b.brand))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Choose a Brand:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBrand,\n      onChange: e => setSelectedBrand(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Brands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), uniqueBrandNames.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: brand,\n        children: brand.charAt(0).toUpperCase() + brand.slice(1)\n      }, brand, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredBrands.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: b.brand\n      }, b.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseBrandFilter, \"p0fitJVyBRnjd4Ivg+sZ3WhmgbU=\");\n_c = ExerciseBrandFilter;\nexport default ExerciseBrandFilter;\nvar _c;\n$RefreshReg$(_c, \"ExerciseBrandFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","brands","id","brand","ExerciseBrandFilter","_s","selectedBrand","setSelectedBrand","filteredBrands","filter","b","uniqueBrandNames","Set","map","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/abhiruproy/docuflow-pro/src/Ex01/ExerciseBrandFilter.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst brands = [\n  { id: 1, brand: 'puma' },\n  { id: 2, brand: 'addidas' },\n  { id: 3, brand: 'reebok' },\n  { id: 4, brand: 'nike' },\n  { id: 5, brand: 'puma' },\n]\n\nfunction ExerciseBrandFilter() {\n  const [selectedBrand, setSelectedBrand] = useState('')\n\n  // Get list of brands to display, filtered if a brand is selected\n  const filteredBrands = selectedBrand\n    ? brands.filter((b) => b.brand === selectedBrand)\n    : brands\n\n  // Extract unique brand names for the dropdown\n  const uniqueBrandNames = [...new Set(brands.map((b) => b.brand))]\n\n  return (\n    <div>\n      <label>Choose a Brand:</label>\n      <select\n        value={selectedBrand}\n        onChange={(e) => setSelectedBrand(e.target.value)}\n      >\n        <option value=\"\">All Brands</option>\n        {uniqueBrandNames.map((brand) => (\n          <option key={brand} value={brand}>\n            {brand.charAt(0).toUpperCase() + brand.slice(1)}\n          </option>\n        ))}\n      </select>\n      <br />\n      <br />\n      <ul>\n        {filteredBrands.map((b) => (\n          <li key={b.id}>{b.brand}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default ExerciseBrandFilter\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAU,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAS,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,CACzB;AAED,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMU,cAAc,GAAGF,aAAa,GAChCL,MAAM,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,KAAK,KAAKG,aAAa,CAAC,GAC/CL,MAAM;;EAEV;EACA,MAAMU,gBAAgB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACX,MAAM,CAACY,GAAG,CAAEH,CAAC,IAAKA,CAAC,CAACP,KAAK,CAAC,CAAC,CAAC;EAEjE,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAO;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9BlB,OAAA;MACEmB,KAAK,EAAEb,aAAc;MACrBc,QAAQ,EAAGC,CAAC,IAAKd,gBAAgB,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAElDd,OAAA;QAAQmB,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACnCP,gBAAgB,CAACE,GAAG,CAAEV,KAAK,iBAC1BH,OAAA;QAAoBmB,KAAK,EAAEhB,KAAM;QAAAW,QAAA,EAC9BX,KAAK,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGrB,KAAK,CAACsB,KAAK,CAAC,CAAC;MAAC,GADpCtB,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAAc,QAAA,EACGN,cAAc,CAACK,GAAG,CAAEH,CAAC,iBACpBV,OAAA;QAAAc,QAAA,EAAgBJ,CAAC,CAACP;MAAK,GAAdO,CAAC,CAACR,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACb,EAAA,CAlCQD,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AAoC5B,eAAeA,mBAAmB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}