{"ast":null,"code":"var _jsxFileName = \"/Users/abhiruproy/docuflow-pro/src/Compo/List.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst users = [{\n  id: 1,\n  name: 'Alice'\n}, {\n  id: 2,\n  name: 'Raj'\n}, {\n  id: 3,\n  name: 'Rahul'\n}];\nconst isLoggin = true;\nfunction Check() {\n  if (isLoggin) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = Check;\nconst List = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Check\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["users","id","name","isLoggin","Check","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","List","_Fragment","map","user","_c2","$RefreshReg$"],"sources":["/Users/abhiruproy/docuflow-pro/src/Compo/List.js"],"sourcesContent":["const users = [\n  {id: 1, name:'Alice'},\n  {id: 2, name: 'Raj'},\n  {id: 3, name: 'Rahul'}\n];\n\nconst isLoggin = true;\n\nfunction Check() {\n  if(isLoggin){\n    return <h1>Welcome</h1>\n  }else {\n    return <h1>Please Login</h1>\n  }\n}\n\n\n\nconst List = () => {\n  return (\n    <>\n    <ul>\n    {users.map(user => (\n      <li key={user.id}>{user.name}</li>\n    ))}\n    </ul>\n    <Check />\n    </>\n  );\n}\n\nexport default List;"],"mappings":";;AAAA,MAAMA,KAAK,GAAG,CACZ;EAACC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAC;AAAO,CAAC,EACrB;EAACD,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAK,CAAC,EACpB;EAACD,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,CACvB;AAED,MAAMC,QAAQ,GAAG,IAAI;AAErB,SAASC,KAAKA,CAAA,EAAG;EACf,IAAGD,QAAQ,EAAC;IACV,oBAAOE,OAAA;MAAAC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB,CAAC,MAAK;IACJ,oBAAOL,OAAA;MAAAC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;AACF;AAACC,EAAA,GANQP,KAAK;AAUd,MAAMQ,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACEP,OAAA,CAAAQ,SAAA;IAAAP,QAAA,gBACAD,OAAA;MAAAC,QAAA,EACCN,KAAK,CAACc,GAAG,CAACC,IAAI,iBACbV,OAAA;QAAAC,QAAA,EAAmBS,IAAI,CAACb;MAAI,GAAnBa,IAAI,CAACd,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACLL,OAAA,CAACD,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAAAM,GAAA,GAXKJ,IAAI;AAaV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}