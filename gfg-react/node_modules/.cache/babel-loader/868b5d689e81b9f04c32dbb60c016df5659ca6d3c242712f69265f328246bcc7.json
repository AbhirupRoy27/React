{"ast":null,"code":"var _jsxFileName = \"/Users/abhiruproy/docuflow-pro/src/Compo/StateRender.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// var v1 = 10;\n//Way 1: Recommended way\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StateRender = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"you Clicked \", count, \" times.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \" 'add + 1' \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StateRender, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = StateRender;\nexport default StateRender;\n\n// way 2 : similar component as above but custom function.\nfunction Counter() {\n  _s2();\n  let [v1, setCount] = useState(0); // count(v1 or anything) is the state variable\n\n  //custom Function\n  const inc = () => {\n    // v1 = v1 + 1;     //try updateing the state vatiable (valid)\n    // console.log(v1);\n    setCount(v1 = v1 + 1);\n  };\n  const onInputChage = event => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inc,\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", v1, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s2(Counter, \"+jRH3QCqTzGtsNzqAlBrONKuvrg=\");\n_c2 = Counter;\nvar _c, _c2;\n$RefreshReg$(_c, \"StateRender\");\n$RefreshReg$(_c2, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","StateRender","_s","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Counter","_c","_s2","v1","inc","onInputChage","event","onChange","placeholder","_c2","$RefreshReg$"],"sources":["/Users/abhiruproy/docuflow-pro/src/Compo/StateRender.js"],"sourcesContent":["import React, { useState } from 'react'\n\n// var v1 = 10;\n//Way 1: Recommended way\nconst StateRender = () => {\n  const [count, setCount] = useState(0)\n\n  return (\n    <>\n      <p>you Clicked {count} times.</p>\n      <button onClick={() => setCount(count + 1)}> 'add + 1' </button>\n      <Counter />\n    </>\n  )\n}\n\nexport default StateRender\n\n// way 2 : similar component as above but custom function.\nfunction Counter() {\n  let [v1, setCount] = useState(0) // count(v1 or anything) is the state variable\n\n  //custom Function\n  const inc = () => {\n    // v1 = v1 + 1;     //try updateing the state vatiable (valid)\n    // console.log(v1);\n    setCount((v1 = v1 + 1))\n  }\n\n  const onInputChage = (event) => {}\n\n  return (\n    <div>\n      <input onChange={inc} placeholder=\"Search\" />\n      <p>You clicked {v1} times</p>\n\n      {/* this is where i call a user defied function ('inc')*/}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACF,KAAK,EAAC,SAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEX,OAAA,CAACa,OAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACX,CAAC;AAEP,CAAC;AAAAP,EAAA,CAVKD,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAYjB,eAAeA,WAAW;;AAE1B;AACA,SAASU,OAAOA,CAAA,EAAG;EAAAE,GAAA;EACjB,IAAI,CAACC,EAAE,EAAEV,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,EAAC;;EAEjC;EACA,MAAMmB,GAAG,GAAGA,CAAA,KAAM;IAChB;IACA;IACAX,QAAQ,CAAEU,EAAE,GAAGA,EAAE,GAAG,CAAE,CAAC;EACzB,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK,CAAC,CAAC;EAElC,oBACEnB,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAOoB,QAAQ,EAAEH,GAAI;MAACI,WAAW,EAAC;IAAQ;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CX,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACS,EAAE,EAAC,QAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1B,CAAC;AAEV;AAACI,GAAA,CApBQF,OAAO;AAAAS,GAAA,GAAPT,OAAO;AAAA,IAAAC,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}